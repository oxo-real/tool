#!/usr/bin/env bash

# yank current (visible) buffer into wl-copy

# dependencies: alacritty, ydotool

args=$@
arg1=$1


check_service()
{
    service_status=$(systemctl --user status dotoold.service | grep 'Active' | awk '{print $2}')
}


start_service()
{
    case $service_status in

    	inactive)
    	    systemctl --user start dotoold.service
    	    printf '%s\n' 'starting dotoold.service...'
    	    sleep 2
    	    ;;

    esac
}


yank_scrollback_buffer()
{
    # capture entire scrollback buffer
    ## alacritty keysequence:
    ## C-S-space v g y C-S space
    ## v visual mode, g cursor to buffer top, y yank block
    echo key ctrl+shift+space v g y ctrl+shift+space | dotool
}


yank_visible_buffer()
{
    # capture visible buffer
    # alacritty keysequence:
    # C-S-space :0y+ S-h v S-g y C-S-space
    ## v visual mode, G cursor to screen top, y yank block
    echo key ctrl+shift+space shift+semicolon 0 y shift+minus shift+h v shift+g y ctrl+shift+space | dotool
}

yank()
{
    ## clear wl-copy buffer
    wl-copy -c

    case $arg1 in

	all)
	    yank_scrollback_buffer
	    ;;

	*)
	    yank_visible_buffer
	    ;;

    esac
}


rm_dbl_space()
{
    # present unique words from input string
    # each word on it's own line
    # designed to be used in conjuction with yank_buffer

    #TODO DEV via pipe instead of wl-copy
    args="$(wl-paste)"
    # removing double spaces from string
    single_space_copy=$(tr ' ' '\n' <<< "$args" | sort | uniq)

    printf '%s' "$single_space_copy" | fzf -d ' '
}


print_fzf()
{
    printf '%s' "$single_space_copy" | fzf -d ' '
}


main()
{
    check_service
    start_service
    yank
    #rm_dbl_space
    #print_fzf
}

main
