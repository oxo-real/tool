#! /usr/bin/env sh

###  _
### | |_ _______  _ __   ___ _ __
### | __|_  / _ \| '_ \ / _ \ '__|
### | |_ / / (_) | | | |  __/ |
###  \__/___\___/|_| |_|\___|_|
###
###
###  # # # # # #
###       #
###  # # # # # #
###

: '
tzoner
get timezone info
copyright (c) 2019 - 2024  |  oxo

GNU GPLv3 GENERAL PUBLIC LICENSE
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
https://www.gnu.org/licenses/gpl-3.0.txt

@oxo@qoto.org


# dependencies
  /usr/share/zoneinfo/posix/

# usage
% tzoner [$part_of_zoneinfo_filename]
% tzoner | fzf [-m]

## explanation
caclulate local tz correction to get foreign time

formula:
	d_local_foreign = d_UTC_local - d_UTC_foreign

# examples
analog watch (12 hour bezel) is on local tz
left bezel rotation = negative tz correction
right bezel rotation = positive tz correction

d_UTC_local = +0100
d_UTC_foreign = -0700
d_local_foreign = d_UTC_local - d_UTC_foreign = +0100 - -0700 = +0800
right bezel rotation of 08 hours (0800)

d_UTC_local = -0600
d_UTC_foreign = +0500
d_local_foreign = d_UTC_local - d_UTC_foreign = -0600 - +0500 = -1100
left bezel rotation of 11 hours (0100)

# '


search=$1
time_format='%a %F %T'
zone_info='/usr/share/zoneinfo/posix/'

find -L $zone_info -type f | grep -i "$search" |
	while read z; do

		## rfc-2822 format
		d=$(TZ=$z date -R)

		## other time_format
		#d=$(TZ=$z date +"$time_format")

		printf "%23s %-34s\n" "$d" ${z#$zone_info}

	done
