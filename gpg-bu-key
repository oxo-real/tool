#! /usr/bin/env sh

# usage: gpg-bu-key $keyid $bu_dir

set -o errexit
#set -o nounset
set -o pipefail

args="$@"
keyid="$1"
dir_arg="$2"


[[ -z "$keyid" ]] && printf '%s\n' 'no keyid' && exit 14
[[ -z "$dir_arg" ]] && dir_arg=$(pwd)


## backup files go in their keyid directory
bu_dir="$dir_arg"/"$keyid"
[[ -d "$bu_dir" ]] || mkdir -p "$bu_dir"


get_pass ()
{
    pass=$(askpass "$keyid")
}


gen_rev_ALT ()
{
    gpg --generate-revocation --output "$bu_dir"/"$keyid"-rev.crt "$keyid" <<EOF
y
0
precautionary autogenerated revocation certificate

y
EOF
}


key_backup ()
{
    ## crt.key
    echo "$pass" \
	| gpg \
	      --yes \
              --batch \
              --passphrase-fd 0 \
              --pinentry-mode loopback \
              --armor \
              --export-secret-keys \
              --output "$bu_dir"/"$keyid"-crt.key \
              "$keyid"

    ## sub.key
    echo "$pass" \
	| gpg \
	      --yes \
              --batch \
              --passphrase-fd 0 \
              --pinentry-mode loopback \
              --armor \
              --export-secret-subkeys \
              --output "$bu_dir"/"$keyid"-sub.key \
              "$keyid"

    ## pub.key
    echo "$pass" \
	| gpg \
	      --yes \
              --armor \
              --export \
              --output "$bu_dir"/"$keyid"-pub.asc \
              "$keyid"

    ## rev.crt
    gen_rev_ALT
    #echo "$pass" \
    #	| gpg \
    # 	      --yes \
    #          --batch \
    #          --passphrase-fd 0 \
    #          --pinentry-mode loopback \
    #          --armor \
    #          --generate-revocation \
    #          --output "$bu_dir"/"$keyid"-rev.crt \
    #          "$keyid"
}


main ()
{
    get_pass
    key_backup
}

main
