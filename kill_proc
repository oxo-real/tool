#!/bin/bash

## C-u clears the entry in fzf

source $HOME/_git/code/sources/functions/reply_functions
source $HOME/_git/code/sources/functions/text_appearance
source $HOME/_git/code/sources/functions/get_sudo

level=$1

# are we ran elevated?
sudo -n printf "" > /dev/null 2>&1

[[ $? == 0 ]] && elevated="yes"

if [[ $level == "--root" ]] && [[ -z "$elevated" ]]; then

	clear
	# hide cursor
	tput civis
	printf "${RED}killing root processes requires elevated privileges!${NOC}\n"
	sleep 2
	clear
	# show cursor
	tput cnorm

fi

cursor_up_one_line() {

	tput cuu1

}


fzf_input() {

	[[ $level == "--root" ]] && fzf_input=$(ps -ef)

	[[ -z $level ]] && fzf_input=$(ps -ef | grep -v ^root)

}


kill_proc() {

	local pid

	pid=$(printf "$fzf_input" | fzf -m --cycle --header-lines=1 | awk '{print $2}')

	echo

	if [ "x$pid" != "x" ]; then

		while IFS= read -r line_in_pid;	do

			printf "$(ps -p $line_in_pid -o comm=)\n"

		done <<< "$pid"

		echo
		printf "${YELLOW}kill process(es)? (y/N):${NOC} "

		reply_single

		if printf "$reply" | grep -iq "^y"; then

			printf "\nkilling in progress... "
			echo $pid | xargs kill -${1:-9}
			echo
			printf "${GREEN}complete${NOC}\n"

		else

			printf "\n${RED}aborted by user${NOC}\n"
			printf "no processes were killed\n"
			printf "exiting\n"
			exit

		fi

	fi

}


fzf_input
kill_proc
