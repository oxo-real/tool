#! /usr/bin/env sh

## remove lines from history containing selected content

## history file
histfile="$HOME"/.logs/history/history


show_lines ()
{
    ## show unique history lines
    delimiter=':0;'
    uniq_lines=$(awk -F "$delimiter" '{print $2}' "$histfile" \
		     | nl --number-format ln \
		     | sort --key 2 --uniq \
		     | sort --numeric-sort --key 1,1 \
		     | awk '!($1="")' \
		     | sed 's/^[ \t]*//'
	      )

    ## select lines in fzf (latest on top)
    line_sel=$(fzf --multi --tac <<< "$uniq_lines")

    ## exit if line_sel is empty
    [[ -z "$line_sel" ]] && exit 0
}


select_lines ()
{
    printf '%s\n' "$line_sel"
    input=$(printf 'qxct\nline\npart' | fzf --prompt 'delete ')
}


select_action ()
{
    case "$input" in

	line )
	    ## remove all selected lines from file
	    while read line; do

		# escaped line lhs (search part) of sed
		## characters that have to be escaped in regular expression
		## use bre or ere

		## basic regular expression (bre)
		line_esc_lhs_bre="${line//[][\\\/.^\$*]/\\&}"
		sed -i "/^.*${delimiter}${line_esc_lhs_bre}$/d" "$histfile"

		## extended regular expression (ere)
		# line_esc_lhs_ere="${line//[][\\\/.^\$\*\+\?\(\)\{\}\|]/\\&}"
		# sed -i -E "/^.*${delimiter}${line_esc_lhs_ere}$/d" "$histfile"

	    done <<< "$line_sel"
	    ;;

	part )
	    split_line
	    select_part

	    case "$part_sel" in

		alt_delim )
		    ## alternative delimiter
		    printf '%s ' 'delimiter:'

		    ## multiple
		    read -r delimiter

		    ## single
		    # read -r -n 1 delimiter

		    ## add space to delimiter
		    ## (this way space is always a delimiter)
		    delimiter="$delimiter "

		    ## set delimiter
		    [[ -n "$delimiter" ]] && IFS="$delimiter"

		    split_line
		    select_part
		    ;;

	    esac

	    ## remove all lines containing selected space delimited part from file
	    sed -i "/${part_sel}/d" "$histfile"
	    ;;

	qxct | '' | * )
	    exit 0
	    ;;

    esac
}


split_line ()
{
    # build line_parts_arr

    ## split line into parts
    line_parts_arr=($line_sel)

    ## add alt_delim option
    line_parts_arr+=(alt_delim)

    ## reset internal field separator
    IFS=
}


select_part ()
{
    part_sel=$(printf '%s\n' "${line_parts_arr[@]}" | fzf)
}


main ()
{
    show_lines
    select_lines
    select_action
}

main
