#!/bin/bash
#
##
### pkg_copy
###
### copies currently installed version of every pacman installed package
###
### usage: pkg_copy <destination>
##
#

## package file source
p_src='/var/cache/pacman/pkg'

db_name='offline'

## destination root
p_dst=$@

timestamp=$(date +%s)

# create destination locations if not exist
[[ -d $p_dst ]] ||		mkdir -p $p_dst


## ! ## rsync -aAXv /var/cache/pacman/pkg dock/2
## ! ## repo-add ~/dock/2/offline.db.tar.zst ~/dock/2/*.pkg.tar.{zst,xz}


for package in $(pacman -Qq); do

	# online check for package existence
	pacman -Si $package >/dev/null 2>&1

	if [[ $? -ne 0 ]]; then

		# pacman_Si error: package '$package' was not found
		# package is not found online

		pacman -Qqmet $package >/dev/null 2>&1

		if [[ $? -eq 0 ]]; then

			# package is an
			# unrequired (t) explicitly installed (e) foreign (m) package
			# package file is probably stored in cache_yay
			cache_yay=1

		fi

	else

		# append package info to pacman_qi.list
		## package file location
		pacman -Sp $package >> $p_dst/"$timestamp"_pacman_qi.list
		## package information
		pacman -Qi $package >> $p_dst/"$timestamp"_pacman_qi.list


		# package current version
		p_curr_ver=$(\
			pacman -Qi $package | \
			grep ^Version | \
			awk -F ': ' '{print $2}'\
		)

		# package files to copy
		## existing .sig files are also copied
		p_files_copy=$(\
			ls $p_src | \
			grep ^$package-$p_curr_ver
		)

		## add to rsync list
		rsync_list="$p_dst/"$timestamp"_rsync_sp.list"
		#package_file=$(pacman -Sp $package | sed "s|file:\/\/"$p_src"\/||")
		#printf '%s\n' "$package_file" >> $rsync_list
		#printf '%s\n' "$package_file" >> $p_dst/"$timestamp"_rsync_sp.list
		printf '%s\n' "$p_files_copy" >> $rsync_list

		## with extraneous file deletion in destination
		#rsync -aAXv --delete --times $file $p_dst

		## without file deletion in destination
		# create rsync file-from list

		#cp --preserve=timestamps $p_src/$file $p_dst
		#rsync -aAXv $p_src/$file $p_dst

		printf "$package\n"

	fi

done

## rsync file list
#
rsync -aAXv --delete --files-from="$p_dst/"$timestamp"_rsync_sp.list" $p_src $p_dst


# build custom package database
## .zst and older .xz packages
repo-add $p_dst/$db_name.db.tar.zst $p_dst/*.pkg.tar.{zst,xz}


# number of packages in destination
#p_file_dst_count=$(ls $p_dst | grep --invert-match .sig$ | wc -l)

# number of packages in source
#p_src_count=$(pacman -Q | wc -l)

#printf "$p_dst_count $p_dst\n"
#printf "$p_src_count $p_src\n"

