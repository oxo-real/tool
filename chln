#! /usr/bin/env sh

## usage:	chln $target_directory

: '
change symlinks target to current $USER home
i.e.
old: readlink old symlink is /home/old-user/dir/symlink
new: readlink new symlink is /home/new-user/dir/symlink

script applies to targets inside $HOME
# '

## read target_directory
target_dir="$1"


# designate target

if [[ ! -d "$target_dir" ]]; then

    ## default target
    printf 'target directory not found\n'
    exit 23

fi


## create associative array with failed symlinks (target link_name)
typeset -A failed_symlinks

for xlink in $(find "$target_dir" -xtype l -print); do
    ## xlink is a failed symlink inside target_dir

    target=$(readlink -f "$xlink")
    link_name=$(realpath --strip "$xlink")

    if [[ -f "$target" && -f "$link_name" ]]; then

	## add xlink its target and link_name to array
	failed_symlinks["$target"]="$link_name"

    fi

done


for target in "${failed_symlinks[@]}"; do
#for target in "${(@k)failed_symlinks}"; do

    link_name="${failed_symlinks[$target]}"

    if [[ "$target" == /home/* && \
	      "${failed_symlinks[$target]}" == /home/* ]]; then
	## both key and value are directories under /home/

	new_target=$(cut -d / -f 4- | <<< "$target" \
			 | awk -v new_home="$HOME/" '{print new_home $0}' \
		  )

	new_link_name=$(cut -d / -f 4- | <<< "${failed_symlinks[$target]}" \
			 | awk -v new_home="$HOME/" '{print new_home $0}' \
		  )

 	ln --symbolic --force "$new_target" "$new_link_name"

    fi

done
