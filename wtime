#! /usr/bin/env sh

# world time clock

### usage: wtime [$time_zones]
### example: wtime -0600 +0100 +0700


args="$@"


process_args()
{
    ## sort args (timezones)
    tz_args="$(printf "$args" | tr ' ' '\n' | sort | tr '\n' ' ')"

    ## user has entered tz_args
    [ -n "$tz_args" ] && tz_args_expl=1
}


tz_data()
{
    #time_format='%a %F %T'
    zone_info_dir='/usr/share/zoneinfo/posix/'

    zone_info_files="$(find -L $zone_info_dir -type f | sort --reverse)"

    time_zones=$(
	while read time_zone; do

	    time_zone=$(printf '%s' "$time_zone" | sed "s|$zone_info_dir||")

	    ## rfc-2822 format
	    d=$(TZ=$time_zone date -R)

	    ## other time_format
	    #d=$(TZ=$z date +"$time_format")

	    printf "%s %s\n" "$d" ${time_zone#$zone_info_files}

	done <<< "$zone_info_files"
	      )

    if [[ -n $tz_args ]]; then

	## user has entered tz_args
	process_list

    else

	## select tz_args with fzf
	tz_select=$(printf '%s' "$time_zones" | sort --key 6n --key 5n --key 7 | fzf -m)

    fi

    tz_lines=$(printf '%s\n' "$tz_select" | wc -l)
}


process_list()
{
    ## create tz_select
    for tz_arg in $tz_args; do

	tz_grep=$(printf "$time_zones" | sort --numeric-sort | grep -- "$tz_arg" | head -n 1)

	tz_select=$(printf "$tz_select\n$tz_grep\n")

    done

    # remove first blank line
    tz_select=$(printf "$tz_select" | tail -n +2)
}


handler()
{
    neat_end=1
}


printing()
{
    while true; do

	tput civis

	while read line; do

	    ## trap the SIGINT signal
	    trap handler SIGINT

	    ## define tz; print last field; time zone text
	    tz=$(printf "$line" | awk '{print $NF}')

	    ## time format rfc-2822
	    d=$(TZ=$tz date -R)

	    ## print current time
	    case $tz_args_expl in

		1)
		    printf "%s %s\n" "$d"
		    ;;

		*)
		    printf "%s %s\n" "$d" "$tz"
		    ;;

	    esac

	done <<< "$tz_select"

	case $neat_end in

	    1)
		tput cnorm
		exit 0
		;;

	esac

	sleep 1

	## erase lines
	for ((i=1; i<=$tz_lines; i++)); do

	    printf "\r"
	    tput el
	    tput cuu1

	done

    done
}


main()
{
    process_args "$args"
    tz_data
    printing
}

main
