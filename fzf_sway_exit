#!/bin/sh
#
##
###                                      _ _
###  _____      ____ _ _   _    _____  _(_) |_
### / __\ \ /\ / / _` | | | |  / _ \ \/ / | __|
### \__ \\ V  V / (_| | |_| | |  __/>  <| | |_
### |___/ \_/\_/ \__,_|\__, |  \___/_/\_\_|\__|
###                    |___/
###
###  _ _|_ _ ._    _  _
### (_\/|_(_)|_)\/(_|(/_
###   /      |  /  _|
###
### sway exit
### terminal cli application that offers a sway fzf exit dialogue
### (c) 2019 - 2021 cytopyge
###
##
#

exit_option=$(printf " cancel \n idle \n lock \n exit \n suspend \n reboot \n poweroff " | \
	fzf \
	--prompt="E X I T ? $(sway -v)"
	)


cancel() {

	exit

}


sway_idle() {

	# wanted to have a actively invoked screen off functionality here
	# disabled swayidle for now...
	#[TODO] swayidle is not meant to be actively called, because is does not end
	# possible other solutions are investigated: $XDG_CONFIG_HOME/code/sway/monitor_off
	#swayidle -w \
	#	timeout 3 'swaylock -f -c 000000' \
    #	timeout 5 'swaymsg "output * dpms off"' \
	#		resume 'swaymsg "output * dpms on"' && pkill swayidle
	sh $XDG_CONFIG_HOME/code/sway/dimr screen_off

}


sway_lock() {

	sh $XDG_CONFIG_HOME/code/sway/dimr swaylock_now

}


sway_exit() {

	sway exit

}


os_suspend() {

	systemctl suspend

}


os_reboot() {

	systemctl reboot

}


os_poweroff() {

	systemctl poweroff

}


case $exit_option in

	*cancel*)
		exit
		;;

	*idle*)
		sway_idle
		;;

	*lock*)
		sway_lock
		;;

	*exit*)
		sway_exit
		;;

	*suspend*)
		os_suspend
		;;

	*reboot*)
		os_reboot
		;;

	*poweroff*)
		os_poweroff
		;;

	*)
		exit
		;;

esac


swaymsg -t command exec $exit_option
